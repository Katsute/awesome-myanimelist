name: Change Request

on:
  workflow_dispatch:
    inputs:
      repository:
        required: true
        description: Repository name, 'OWNER/REPO'
        type: string
      category:
        required: true
        description: Category, comma separated; Use 'DELETE' for deletion.
        type: string

jobs:
  item:
    name: Change Request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node
        uses: actions/setup-node@v5
        with:
          architecture: x64
          node-version: 20

      - name: Verify Branch Name
        uses: actions/github-script@v8
        env:
          BRANCH: ${{ github.event.inputs.repository }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |-
            core.exportVariable("BRANCH", "repository/" + process.env.BRANCH.replace(/[^\w]/gm, '-').toLowerCase());

      - name: Checkout New Branch
        env:
          BRANCH: ${{ env.BRANCH }}
        run: |-
          git checkout -B "$BRANCH"

      - name: Write Changes
        uses: actions/github-script@v8
        env:
          REPOSITORY: ${{ github.event.inputs.repository }}
          CATEGORY: ${{ github.event.inputs.category }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |-
            const fs = require("fs");
            const path = require("path");
            const __dirname = path.resolve();

            const file = path.join(__dirname, "repositories.json");
            let data = JSON.parse(fs.readFileSync(file, "utf-8"));

            const repository = process.env.REPOSITORY;
            const category = process.env.CATEGORY;

            data = data.filter(item => item.repository.toLowerCase() !== repository.toLowerCase());

            if(category != "DELETE")
              data.push({
                repository: repository,
                category: category.split(",").map(s => s.trim())
              });

            data.sort((a, b) => a.repository.toLowerCase() > b.repository.toLowerCase() ? 1 : -1);

            fs.writeFileSync(file, JSON.stringify(data, null, 4));

      - name: Commit Changes
        env:
          REPOSITORY: ${{ github.event.inputs.repository }}
        run: |-
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -u
          git commit -m "Modify '$REPOSITORY'"
          git push origin HEAD

      - name: Create PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.event.inputs.repository }}
        run: gh pr create -l "change request" -t "[Change] $REPOSITORY" -b "Automated change request for [$REPOSITORY](https://github.com/$REPOSITORY)" -a "Katsute"

      - name: Dispatch README
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ env.BRANCH }}
        run: gh workflow run update.yml -r "$BRANCH"